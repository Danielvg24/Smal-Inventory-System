version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inventory-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_PATH=/app/database/inventory.db
      - CORS_ORIGIN=http://localhost:3000
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    volumes:
      - ./backend/database:/app/database
      - backend_logs:/app/logs
    ports:
      - "5000:5000"
    networks:
      - inventory-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: inventory-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    networks:
      - inventory-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development services (optional - uncomment to use)
  # backend-dev:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile.dev
  #   container_name: inventory-backend-dev
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=5000
  #     - DB_PATH=/app/database/inventory.db
  #     - CORS_ORIGIN=http://localhost:3001
  #   volumes:
  #     - ./backend:/app
  #     - /app/node_modules
  #     - ./backend/database:/app/database
  #   ports:
  #     - "5001:5000"
  #   networks:
  #     - inventory-network
  #   command: npm run dev

  # frontend-dev:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   container_name: inventory-frontend-dev
  #   environment:
  #     - VITE_API_URL=http://localhost:5001/api
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   ports:
  #     - "3001:3000"
  #   networks:
  #     - inventory-network
  #   depends_on:
  #     - backend-dev
  #   command: npm run dev

networks:
  inventory-network:
    driver: bridge
    name: inventory-network

volumes:
  backend_logs:
    name: inventory-backend-logs 